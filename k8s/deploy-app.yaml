apiVersion: v1
kind: Service
metadata:
  name: service-tracker-ui
  labels:
    name: service-tracker-ui
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: service-tracker-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-tracker-ui
  labels:
    app: service-tracker-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-tracker-ui
  template:
    metadata:
      labels:
        app: service-tracker-ui
    spec:
      containers:
      - env:
          - name: FLIGHT_API_ROOT
            value: http://flights-api:3003/
          - name: WEATHER_API_ROOT
            value: http://weather-api:3015/
          - name: QUAKES_API_ROOT
            value: http://quakes-api:3012/
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        image: briaracr.azurecr.io/hackfest/service-tracker-ui:3.0
        imagePullPolicy: Always
        name: service-tracker-ui
        ports:
        - containerPort: 8080
          protocol: TCP
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: flights-api
  labels:
    name: flights-api
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 3003
    targetPort: 3003
  selector:
    app: flights-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flights-api
  labels:
    app: flights-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flights-api
  template:
    metadata:
      labels:
        app: flights-api
    spec:
      containers:
        - image: briaracr.azurecr.io/hackfest/flights-api:3.0
          imagePullPolicy: Always
          name: flights-api
          env:
            - name: DATA_SERVICE_URI
              value: http://data-api:3009/
          ports:
          - containerPort: 3003
            protocol: TCP
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: quakes-api
  labels:
    name: quakes-api
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 3012
    targetPort: 3012
  selector:
    app: quakes-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quakes-api
  labels:
    app: quakes-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: quakes-api
  template:
    metadata:
      labels:
        app: quakes-api
    spec:
      containers:
        - image: briaracr.azurecr.io/hackfest/quakes-api:3.0
        #- image: briaracr.azurecr.io/hackfest/quakes-api:slow-response
          imagePullPolicy: Always
          name: quakes-api
          env:
            - name: DATA_SERVICE_URI
              value: http://data-api:3009/
          ports:
          - containerPort: 3012
            protocol: TCP
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: weather-api
  labels:
    name: weather-api
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 3015
    targetPort: 3015
  selector:
    app: weather-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-api
  labels:
    app: weather-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: weather-api
  template:
    metadata:
      labels:
        app: weather-api
    spec:
      containers:
        - image: briaracr.azurecr.io/hackfest/weather-api:3.0
          imagePullPolicy: Always
          name: weather-api
          env:
            - name: DATA_SERVICE_URI
              value: http://data-api:3009/
          ports:
          - containerPort: 3015
            protocol: TCP
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: data-api
  labels:
    name: data-api
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 3009
    targetPort: 3009
  selector:
    app: data-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-api
spec:
  replicas: 6
  selector:
    matchLabels:
      app: data-api
  template:
    metadata:
      labels:
        app: data-api
    spec:
      containers:
        - image: briaracr.azurecr.io/hackfest/data-api:3.0
          imagePullPolicy: Always
          name: data-api
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: cosmos-db-secret
                  key: uri
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: cosmos-db-secret
                  key: user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cosmos-db-secret
                  key: pwd
          ports:
          - containerPort: 3009
            protocol: TCP
      restartPolicy: Always